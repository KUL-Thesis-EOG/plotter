name: CX Freeze Build

on:
  push:
    branches: [ main, master ]  # Support both main and master branch names
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.10']  # Use Python 3.10.x (latest available patch)

    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        python -m pip install --upgrade pip
        pip install cx_freeze
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip
        pip install cx_freeze
        if (Test-Path -Path "requirements.txt") { pip install -r requirements.txt }
      shell: pwsh
    
    - name: Build with cx_freeze
      run: |
        cxfreeze --script main.py --target-dir dist
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-build
        path: dist/
